{
  "meta": {
    "instanceId": "yargizeka-n8n"
  },
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "/webhook/yargizeka-chat",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-chat",
      "name": "Chat Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [240, 300],
      "webhookId": "yargizeka-chat"
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{$json.question}}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "validate-input",
      "name": "Validate Input",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [460, 300]
    },
    {
      "parameters": {
        "model": "gemini-pro",
        "prompt": "Sen YargıZeka Hukuk Asistanısın. Türkiye hukukunda uzman bir hukukçu olarak, kullanıcıların sorularını profesyonel ve detaylı şekilde yanıtla.\n\nKullanıcı Sorusu: {{$json.question}}\n\nYanıtında:\n- Güncel Türk mevzuatına dayalı bilgi ver\n- Emsal Yargıtay ve Danıştay kararlarını referans göster\n- Pratik uygulama önerileri sun\n- Hukuki riskleri belirt\n- Gerektiğinde alternatif çözüm yolları öner\n\nYanıtın Türkçe olsun ve profesyonel ton kullan.",
        "options": {
          "temperature": 0.7,
          "maxTokens": 1000
        }
      },
      "id": "gemini-chat",
      "name": "Gemini Legal Chat",
      "type": "n8n-nodes-base.googleGemini",
      "typeVersion": 1,
      "position": [680, 300]
    },
    {
      "parameters": {
        "jsCode": "// Format the AI response for frontend\nconst aiResponse = $input.first().json.response || $input.first().json.text || \"Yanıt alınamadı\";\n\n// Clean and format the response\nconst formattedResponse = aiResponse\n  .replace(/\\*\\*/g, '') // Remove markdown bold\n  .replace(/\\*/g, '•') // Convert asterisks to bullets\n  .trim();\n\n// Add legal disclaimer if needed\nconst finalResponse = formattedResponse + \"\\n\\n⚖️ Bu bilgiler genel hukuki bilgilendirme amaçlıdır. Spesifik durumunuz için mutlaka bir hukukçuya danışın.\";\n\nreturn {\n  response: finalResponse,\n  timestamp: new Date().toISOString(),\n  tokens_used: Math.ceil(finalResponse.length / 4)\n};"
      },
      "id": "format-response",
      "name": "Format Response",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [900, 300]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{$json}}"
      },
      "id": "success-response",
      "name": "Success Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1120, 300]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseCode": 400,
        "responseBody": "{\"error\": \"Soru parametresi gerekli\", \"message\": \"Lütfen geçerli bir soru gönderin\"}"
      },
      "id": "error-response",
      "name": "Error Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [680, 500]
    },
    {
      "parameters": {
        "jsCode": "// Log chat interaction\nconst logData = {\n  timestamp: new Date().toISOString(),\n  user_question: $json.question,\n  ai_response: $json.response,\n  tokens_used: $json.tokens_used,\n  session_id: $json.session_id || 'anonymous',\n  source: 'n8n-chat-workflow'\n};\n\nconsole.log('Chat interaction logged:', logData);\n\nreturn logData;"
      },
      "id": "log-interaction",
      "name": "Log Interaction",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [1120, 500]
    }
  ],
  "connections": {
    "Chat Webhook": {
      "main": [
        [
          {
            "node": "Validate Input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Validate Input": {
      "main": [
        [
          {
            "node": "Gemini Legal Chat",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gemini Legal Chat": {
      "main": [
        [
          {
            "node": "Format Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Response": {
      "main": [
        [
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          },
          {
            "node": "Log Interaction",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-06-19T10:00:00.000Z",
      "updatedAt": "2025-06-19T10:00:00.000Z",
      "id": "yargizeka-chat",
      "name": "YargıZeka Chat"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-06-19T10:00:00.000Z",
  "versionId": "1"
}